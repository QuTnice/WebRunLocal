
日志时间：2020-02-20 20:55:27,011 [12] 
日志级别：INFO  
入参：111 
 
日志时间：2020-02-20 20:55:27,061 [12] 
日志级别：ERROR 
JSON反序列化失败 
 System.Runtime.Serialization.SerializationException: 应为状态“Element”。。遇到名称为“”、命名空间为“”的“Text”。
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.HandleMemberNotFound(XmlReaderDelegator xmlReader, ExtensionDataObject extensionData, Int32 memberIndex)
   在 System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.GetJsonMemberIndex(XmlReaderDelegator xmlReader, XmlDictionaryString[] memberNames, Int32 memberIndex, ExtensionDataObject extensionData)
   在 ReadInputDTOFromJson(XmlReaderDelegator , XmlObjectSerializerReadContextComplexJson , XmlDictionaryString , XmlDictionaryString[] )
   在 System.Runtime.Serialization.Json.JsonClassDataContract.ReadJsonValueCore(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   在 System.Runtime.Serialization.Json.JsonDataContract.ReadJsonValue(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   在 System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContextComplex.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName)
   在 System.Runtime.Serialization.XmlObjectSerializer.InternalReadObject(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader reader)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(Stream stream)
   在 WebRunLocal.Utils.JSONUtil.Deserialize[T](String jsonString) 位置 e:\MySpace\GitHub\WebRunLocal\WebRunLocal\Utils\JSONUtil.cs:行号 41
   在 WebRunLocal.Managers.RequestHandler.BusinessHandler(String message) 位置 e:\MySpace\GitHub\WebRunLocal\WebRunLocal\Managers\RequestHandler.cs:行号 33

日志时间：2020-02-20 21:01:16,324 [12] 
日志级别：INFO  
入参：111 
 
日志时间：2020-02-20 21:01:16,377 [12] 
日志级别：ERROR 
JSON反序列化失败 
 System.Runtime.Serialization.SerializationException: 应为状态“Element”。。遇到名称为“”、命名空间为“”的“Text”。
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.HandleMemberNotFound(XmlReaderDelegator xmlReader, ExtensionDataObject extensionData, Int32 memberIndex)
   在 System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.GetJsonMemberIndex(XmlReaderDelegator xmlReader, XmlDictionaryString[] memberNames, Int32 memberIndex, ExtensionDataObject extensionData)
   在 ReadInputDTOFromJson(XmlReaderDelegator , XmlObjectSerializerReadContextComplexJson , XmlDictionaryString , XmlDictionaryString[] )
   在 System.Runtime.Serialization.Json.JsonClassDataContract.ReadJsonValueCore(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   在 System.Runtime.Serialization.Json.JsonDataContract.ReadJsonValue(XmlReaderDelegator jsonReader, XmlObjectSerializerReadContextComplexJson context)
   在 System.Runtime.Serialization.Json.XmlObjectSerializerReadContextComplexJson.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContextComplex.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName)
   在 System.Runtime.Serialization.XmlObjectSerializer.InternalReadObject(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader reader)
   在 System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(Stream stream)
   在 WebRunLocal.Utils.JSONUtil.Deserialize[T](String jsonString) 位置 e:\MySpace\GitHub\WebRunLocal\WebRunLocal\Utils\JSONUtil.cs:行号 41
   在 WebRunLocal.Managers.RequestHandler.BusinessHandler(String message) 位置 e:\MySpace\GitHub\WebRunLocal\WebRunLocal\Managers\RequestHandler.cs:行号 27

日志时间：2020-02-20 21:01:16,389 [12] 
日志级别：INFO  
出参：{"CODE":-1,"MSG":"【json格式不正确】","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 21:02:27,366 [13] 
日志级别：INFO  
入参：{
	"TYPE": "1",
	"PATH": "Plugins\\CallDLL\\CallDLL.dll",
	"METHOD": "add",
	"PARAM": [{
		"TYPE": "int",
		"VALUE": "1",
		"MODE": "0"
	}, {
		"TYPE": "int",
		"VALUE": "2",
		"MODE": "0"
	}],
	"RETRUN_TYPE": "int"
} 
 
日志时间：2020-02-20 21:02:27,382 [13] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":3,"VALUES":[]}} 
 
日志时间：2020-02-20 21:27:51,985 [14] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:36:40,398 [11] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:37:26,330 [6] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:40:33,116 [11] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:44:03,052 [12] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:50:35,723 [12] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:50:39,844 [12] 
日志级别：INFO  
出参：{"CODE":-1,"MSG":"【调用类型不正确，请检查，TYPE = 2】","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 21:51:14,818 [6] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:54:52,608 [12] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:54:52,651 [12] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":0,"VALUES":[]}} 
 
日志时间：2020-02-20 21:54:57,780 [13] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:54:57,782 [13] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":0,"VALUES":[]}} 
 
日志时间：2020-02-20 21:55:00,469 [14] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 21:55:00,471 [14] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":0,"VALUES":[]}} 
 
日志时间：2020-02-20 22:00:23,321 [12] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 22:00:23,364 [12] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 22:00:32,411 [13] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 22:00:32,413 [13] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 22:01:14,956 [14] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 22:01:14,958 [14] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 22:01:49,228 [15] 
日志级别：INFO  
入参：{
	"TYPE": "2",
	"PATH": "Plugins\\CallExe\\CallExe.exe",
	"PARAM": [{
		"VALUE": "1111"
	}, {
		"VALUE": "222"
	}, {
		"VALUE": "333"
	}]
} 
 
日志时间：2020-02-20 22:01:49,230 [15] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":"","VALUES":[]}} 
 
日志时间：2020-02-20 22:02:11,635 [16] 
日志级别：INFO  
入参：{
	"TYPE": "1",
	"PATH": "Plugins\\CallDLL\\CallDLL.dll",
	"METHOD": "add",
	"PARAM": [{
		"TYPE": "int",
		"VALUE": "1",
		"MODE": "0"
	}, {
		"TYPE": "int",
		"VALUE": "2",
		"MODE": "0"
	}],
	"RETRUN_TYPE": "int"
} 
 
日志时间：2020-02-20 22:02:11,647 [16] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":3,"VALUES":[]}} 
 
日志时间：2020-02-20 22:02:20,702 [17] 
日志级别：INFO  
入参：{
	"TYPE": "1",
	"PATH": "Plugins\\CallDLL\\CallDLL.dll",
	"METHOD": "CallString",
	"PARAM": [{
		"TYPE": "StringBuilder",
		"VALUE": "",
		"MODE": "1"
	}],
	"RETRUN_TYPE": "int"
}
 
 
日志时间：2020-02-20 22:02:20,707 [17] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":1,"VALUES":["HelloWorld!"]}} 
 
日志时间：2020-02-20 22:02:33,067 [18] 
日志级别：INFO  
入参：{
	"TYPE": "1",
	"PATH": "Plugins\\CallDLL\\CallDLL.dll",
	"METHOD": "CallStringInAndOut",
	"PARAM": [{
		"TYPE": "StringBuilder",
		"VALUE": "HelloWorld",
		"MODE": "0"
	}, {
		"TYPE": "StringBuilder",
		"VALUE": "",
		"MODE": "1"
	}],
	"RETRUN_TYPE": "int"
} 
 
日志时间：2020-02-20 22:02:33,072 [18] 
日志级别：INFO  
出参：{"CODE":0,"MSG":"","RETURN":{"RESULT":1,"VALUES":["HelloWorld123456"]}} 
 